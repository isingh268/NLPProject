# -*- coding: utf-8 -*-
"""TavilyTest2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zPqmmW_lLoKyO8u934x37I-e7NrBEIdm
"""
import streamlit as st
import pandas as pd
from datetime import datetime
from transformers import pipeline
import gc

# Configure the page
st.set_page_config(
    page_title="Scholarship Finder",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Scholarship Data
data = {
    "Scholarship Name": [
        "🎓 Kuru Footsteps to Your Future Scholarship",
        "💡 Alert1 Students for Seniors Scholarship",
        "⭐ Blankstyle Scholarship Opportunity #1",
        "🚀 Innovation In Education Scholarship",
        "📘 The Bert & Phyllis Lamb Prize in Political Science",
        "🌍 New Beginnings Immigrant Scholarship",
    ],
    "Date Due": [
        "2024-12-20",
        "2025-01-10",
        "2024-12-31",
        "2024-10-15",
        "2025-02-14",
        "2024-10-18",
    ],
    "Summary": [
        "Awards $1,000 to high school seniors or college students pursuing academic goals.",
        "Provides $500 for students committed to improving senior care.",
        "A $1,000 bi-annual scholarship to support college expenses.",
        "Recognizes students with innovative projects that benefit their community.",
        "Honors excellence in Political Science with a prestigious award.",
        "Supports first-generation immigrant students pursuing higher education.",
    ],
}

# Convert data to a DataFrame
df = pd.DataFrame(data)
df["Date Due"] = pd.to_datetime(df["Date Due"])

# Load Transformers Pipelines
@st.cache_resource
def load_transformers():
    """Load smaller and optimized models."""
    text_generator = pipeline("text-generation", model="EleutherAI/gpt-neo-1.3B")
    summarizer = pipeline("summarization", model="facebook/bart-large-cnn")
    return text_generator, summarizer

text_generator, summarizer = load_transformers()

# Sidebar Navigation
st.sidebar.title("📚 Navigation")
nav_option = st.sidebar.radio("Go to:", ["🏠 Home", "🎓 Find Scholarships", "📅 Calendar View", "ℹ️ About"])

# Home Page
if nav_option == "🏠 Home":
    st.title("🎓 Welcome to the Scholarship Finder!")
    st.markdown("""
    **Discover tailored scholarships and grants with ease.**  
    Plan your applications and explore opportunities designed for you.
    """)

# Scholarship Finder Page
elif nav_option == "🎓 Find Scholarships":
    st.header("🎓 Find Scholarships")
    st.subheader("📚 Student Profile")
    name = st.text_input("Full Name")
    gpa = st.slider("GPA", 0.0, 4.0, 3.0, step=0.1)
    major = st.selectbox("Academic Major", ["Computer Science", "Engineering", "Business", "Psychology", "Biology", "Other"])
    school_year = st.selectbox("School Year", ["Freshman", "Sophomore", "Junior", "Senior", "Graduate Student"])
    financial_need = st.selectbox("Financial Need?", ["Yes", "No"])
    residence_state = st.text_input("State of Residence (e.g., California)")
    causes = st.multiselect("Causes or Interests", ["Sustainability", "Community Service", "Diversity", "STEM", "Arts"])

    if st.button("🔍 Find Scholarships"):
        # Generate Student Profile Context
        student_profile = f"""
        Student Profile:
        - Name: {name}
        - GPA: {gpa}
        - Major: {major}
        - School Year: {school_year}
        - Financial Need: {financial_need}
        - Residence State: {residence_state}
        - Causes: {', '.join(causes)}
        """
        scholarship_context = "\n".join(
            f"{row['Scholarship Name']}:\n{row['Summary']} (Due: {row['Date Due'].strftime('%Y-%m-%d')})"
            for _, row in df.iterrows()
        )

        # Generate Recommendations
        prompt = (
            f"Based on the following student profile and available scholarships, "
            f"recommend scholarships that fit the student's needs. Include reasons for fit, application steps, and next actions.\n\n"
            f"{student_profile}\n\nAvailable Scholarships:\n{scholarship_context}"
        )

        with st.spinner("Generating recommendations..."):
            response = text_generator(prompt, max_length=250, num_return_sequences=1)
        
        # Clear memory after processing
        del prompt
        gc.collect()

        st.success("Here are your scholarship recommendations:")
        st.write(response[0]["generated_text"])

# Calendar View Page
elif nav_option == "📅 Calendar View":
    st.title("📅 Scholarship Calendar")
    col1, col2 = st.columns([2, 1])

    # Events preparation
    events = {row["Date Due"].strftime("%Y-%m-%d"): row["Scholarship Name"] for _, row in df.iterrows()}

    with col1:
        st.subheader("📆 Calendar")
        selected_event = calendar(events)

    with col2:
        st.subheader("📋 All Scholarships")
        for _, row in df.iterrows():
            st.markdown(
                f"**{row['Scholarship Name']}**  \n"
                f"🗓 **Due Date**: {row['Date Due'].strftime('%B %d, %Y')}"
            )

# About Page
elif nav_option == "ℹ️ About":
    st.header("ℹ️ About This App")
    st.markdown("""
    **Scholarship Finder** simplifies the process of discovering and applying for scholarships.
    - Explore opportunities tailored to your profile.
    - View deadlines in a calendar format.
    - Built with ❤️ for students seeking higher education funding.
    """)
