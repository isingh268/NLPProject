# -*- coding: utf-8 -*-
"""TavilyTest2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zPqmmW_lLoKyO8u934x37I-e7NrBEIdm
"""
import streamlit as st
import pandas as pd
from datetime import datetime
from transformers import pipeline, AutoTokenizer 
import gc

# Configure the page
st.set_page_config(
    page_title="Scholarship Finder",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Scholarship Data
data = {
    "Scholarship Name": [
        "üéì Kuru Footsteps to Your Future Scholarship",
        "üí° Alert1 Students for Seniors Scholarship",
        "‚≠ê Blankstyle Scholarship Opportunity #1",
        "üöÄ Innovation In Education Scholarship",
        "üìò The Bert & Phyllis Lamb Prize in Political Science",
        "üåç New Beginnings Immigrant Scholarship",
    ],
    "Date Due": [
        "2024-12-20",
        "2025-01-10",
        "2024-12-31",
        "2024-10-15",
        "2025-02-14",
        "2024-10-18",
    ],
    "Summary": [
        "Awards $1,000 to high school seniors or college students pursuing academic goals.",
        "Provides $500 for students committed to improving senior care.",
        "A $1,000 bi-annual scholarship to support college expenses.",
        "Recognizes students with innovative projects that benefit their community.",
        "Honors excellence in Political Science with a prestigious award.",
        "Supports first-generation immigrant students pursuing higher education.",
    ],
}

# Convert data to a DataFrame
df = pd.DataFrame(data)
df["Date Due"] = pd.to_datetime(df["Date Due"])

# Load Transformers Pipelines
@st.cache_resource
def load_transformers():
    text_generator = pipeline("text-generation", model="EleutherAI/gpt-neo-1.3B")
    summarizer = pipeline("summarization", model="facebook/bart-large-cnn")
    tokenizer = AutoTokenizer.from_pretrained("EleutherAI/gpt-neo-1.3B")
    return text_generator, summarizer, tokenizer

text_generator, summarizer, tokenizer = load_transformers()

# Scholarship Finder Function
def generate_scholarship_recommendations(prompt, max_length=250):
    # Tokenize and Check Length
    tokens = tokenizer(prompt, return_tensors="pt", truncation=True)
    input_length = len(tokens["input_ids"][0])
    max_possible_output = 2048 - input_length  # Adjust for GPT-Neo's max sequence length

    # Adjust max_length if necessary
    adjusted_max_length = min(max_length, max_possible_output)
    if adjusted_max_length <= 0:
        return "Error: Input prompt is too long. Please shorten your input."

    # Generate Recommendations
    response = text_generator(prompt, max_length=adjusted_max_length, num_return_sequences=1)
    return response[0]["generated_text"]

# Streamlit App Integration
if st.button("üîç Find Scholarships"):
    prompt = f"""
    Student Profile:
    - Name: {name}
    - GPA: {gpa}
    - Major: {major}
    - School Year: {school_year}
    - Financial Need: {financial_need}
    - Residence State: {residence_state}
    - Causes: {', '.join(causes)}

    Based on the above, recommend scholarships that fit the student's profile and explain why each is a good fit. Provide next steps and application guidance.
    """
    with st.spinner("Generating recommendations..."):
        recommendations = generate_scholarship_recommendations(prompt)
    st.success("Here are your scholarship recommendations:")
    st.write(recommendations)

# Calendar View Page
elif nav_option == "üìÖ Calendar View":
    st.title("üìÖ Scholarship Calendar")
    col1, col2 = st.columns([2, 1])

    # Events preparation
    events = {row["Date Due"].strftime("%Y-%m-%d"): row["Scholarship Name"] for _, row in df.iterrows()}

    with col1:
        st.subheader("üìÜ Calendar")
        selected_event = calendar(events)

    with col2:
        st.subheader("üìã All Scholarships")
        for _, row in df.iterrows():
            st.markdown(
                f"**{row['Scholarship Name']}**  \n"
                f"üóì **Due Date**: {row['Date Due'].strftime('%B %d, %Y')}"
            )

# About Page
elif nav_option == "‚ÑπÔ∏è About":
    st.header("‚ÑπÔ∏è About This App")
    st.markdown("""
    **Scholarship Finder** simplifies the process of discovering and applying for scholarships.
    - Explore opportunities tailored to your profile.
    - View deadlines in a calendar format.
    - Built with ‚ù§Ô∏è for students seeking higher education funding.
    """)
